#!/bin/sh

MAKE_DEF_FILE=unix_def.mk

cat <<EOF >$MAKE_DEF_FILE
E=@echo
Q=@
RM=@rm -f
TEMPFILES=*.o
EOF

os_MAC () {
    cat <<EOF >>$MAKE_DEF_FILE
CC=clang
CFLAGS=-DNCURSES_OPAQUE=0 -DOS_X=1 -DUNIX=1 -D_XOPEN_SOURCE_EXTENDED=1 -Wall -std=c99
LDFLAGS=
LDLIBS=-lncurses -lpanel -lpthread
EOF
}

os_BSD () {
    cat <<EOF >>$MAKE_DEF_FILE
CC=gcc
CFLAGS=-DBSD=1 -DUNIX=1 -D_XOPEN_SOURCE_EXTENDED=1 -Wall -std=c99
LDFLAGS=
LDLIBS=-lcrypto -lncursesw -lpanelw -lpthread -lssl
EOF
}

os_LINUX () {
    cat <<EOF >>$MAKE_DEF_FILE
CC=gcc
CFLAGS=-DLINUX=1 -DUNIX=1 -D_POSIX_C_SOURCE=200809L -D_XOPEN_SOURCE=500 -D_XOPEN_SOURCE_EXTENDED=1
CFLAGS+=-Wall -std=c99
LDFLAGS=
LDLIBS=-lcrypto -lncursesw -lpanelw -lpthread -lssl
EOF
}

case "$(uname -s)" in
    "Darwin")
	os_MAC
    ;;
    "FreeBSD" | "NetBSD" | "OpenBSD")
	os_BSD
    ;;
    "Linux")
	os_LINUX
    ;;
    *)
	echo "OS not supported!"
	exit 1
    ;;
esac

if test -f "$MAKE_DEF_FILE"; then
    echo "  - $MAKE_DEF_FILE successfully created!"
    echo "  - now run: 'cd src && make -f unix.mk'"
else
    echo "fatal error"
    exit 1
fi

exit 0
