#!/bin/sh

# Swirc configure script
#
# Copyright (C) 2016-2022 Markus Uhlin. All rights reserved.

MAKE_DEF_FILE=options.mk

. "posixshell/fix_cflags.sh"
. "posixshell/link_with_gnu_libidn.sh"
. "posixshell/link_with_gnu_libintl.sh"
. "posixshell/link_with_libnotify.sh"
. "posixshell/os_BSD.sh"
. "posixshell/os_LINUX.sh"
. "posixshell/os_LINUX_suncc.sh"
. "posixshell/os_MAC.sh"
. "posixshell/os_NETBSD.sh"

_with_libnotify=0
_without_libidn=0
_without_libintl=0

print_help () {
	echo ""
	echo "Configuration options:"
	echo ""
	echo "  --with-libnotify   Enable support for desktop notifications"
	echo "  --without-libidn   Build without GNU libidn"
	echo "  --without-libintl  No internationalization"
	echo ""
}

for arg in "$@"; do
	case "$arg" in
	"--help" | "-?" | "-h")
		print_help
		exit 0
		;;
	"--with-libnotify")
		_with_libnotify=1
		;;
	"--without-libidn")
		_without_libidn=1
		;;
	"--without-libintl")
		_without_libintl=1
		;;
	*)
		;;
	esac
done

cat <<EOF >$MAKE_DEF_FILE
E = @echo
Q = @
RM = @rm -f
SLASH_SYM = /
EOF

case "$(uname -s)" in
"Darwin")
	os_MAC
	;;
"FreeBSD" | "OpenBSD")
	os_BSD
	;;
"NetBSD")
	os_NETBSD
	;;
"Linux")
	if [ "$1" = "suncc" ]; then
		os_LINUX_suncc
	else
		os_LINUX
	fi

	fix_cflags_with_pkg_config
	;;
*)
	echo "OS not supported!"
	exit 1
	;;
esac

if [ $_with_libnotify -eq 1 ]; then
	link_with_libnotify
fi

if [ $_without_libidn -eq 0 ]; then
	link_with_gnu_libidn
fi

if [ $_without_libintl -eq 0 ]; then
	link_with_gnu_libintl
#	${MAKE:-make} -Cpo clean
	${MAKE:-make} -Cpo
fi

if [ -f "$MAKE_DEF_FILE" ]; then
	echo "configure: $MAKE_DEF_FILE successfully created!"
else
	echo "configure: fatal error"
	exit 1
fi
