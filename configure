#!/bin/sh

# Swirc configure script
#
# Copyright (C) 2016-2019 Markus Uhlin. All rights reserved.

MAKE_DEF_FILE=unix_def.mk

cat <<EOF >$MAKE_DEF_FILE
E=@echo
Q=@
RM?=@rm -f
EOF

# --------------------------------------------------
# 		     Mac OS X
# --------------------------------------------------
os_MAC () {
	cat <<EOF >>$MAKE_DEF_FILE
SHARED_FLAGS=\\
	-DNCURSES_OPAQUE=0\\
	-DOS_X=1\\
	-DUNIX=1\\
	-D_XOPEN_SOURCE_EXTENDED=1\\
	-I/usr/local/opt/libressl/include\\
	-O2\\
	-Wall\\
	-pipe
CC=clang
CFLAGS=\$(SHARED_FLAGS) -std=c99
CXX=clang++
CXXFLAGS=\$(SHARED_FLAGS) -std=c++14
LDFLAGS=-L/usr/local/opt/libressl/lib
LDLIBS=\\
	-lcrypto\\
	-lcurl\\
	-lncurses\\
	-lpanel\\
	-lpthread\\
	-lssl
EOF
}

# --------------------------------------------------
#    Generic BSD (Berkeley Software Distribution)
# --------------------------------------------------
os_BSD () {
	cat <<EOF >>$MAKE_DEF_FILE
SHARED_FLAGS=\\
	-DBSD=1\\
	-DUNIX=1\\
	-D_XOPEN_SOURCE_EXTENDED=1\\
	-I/usr/local/include\\
	-Wall
CC=cc
CFLAGS=\$(SHARED_FLAGS) -std=c99
CXX=c++
CXXFLAGS=\$(SHARED_FLAGS) -std=c++14
LDFLAGS=-L/usr/local/lib
LDLIBS=\\
	-lcrypto\\
	-lcurl\\
	-lncursesw\\
	-lpanelw\\
	-lpthread\\
	-lssl
EOF
}

# --------------------------------------------------
# 		      NetBSD
# --------------------------------------------------
os_NETBSD () {
	cat <<EOF >>$MAKE_DEF_FILE
SHARED_FLAGS=\\
	-DBSD=1\\
	-DUNIX=1\\
	-D_XOPEN_SOURCE_EXTENDED=1\\
	-I/usr/pkg/include/ncursesw\\
	-I/usr/pkg/include\\
	-Wall
CC=gcc
CFLAGS=\$(SHARED_FLAGS) -std=c99
CXX=g++
CXXFLAGS=\$(SHARED_FLAGS) -std=c++14
LDFLAGS=\\
	-L/usr/pkg/lib\\
	-Wl,-rpath,/usr/pkg/lib
LDLIBS=\\
	-lcrypto\\
	-lcurl\\
	-lgnupanelw\\
	-lncursesw\\
	-lpthread\\
	-lssl
EOF
}

# --------------------------------------------------
# 		    GNU/Linux
# --------------------------------------------------
os_LINUX () {
	cat <<EOF >>$MAKE_DEF_FILE
SHARED_FLAGS=\\
	-DLINUX=1\\
	-DUNIX=1\\
	-D_FORTIFY_SOURCE=2\\
	-D_POSIX_C_SOURCE=200809L\\
	-D_XOPEN_SOURCE=500\\
	-D_XOPEN_SOURCE_EXTENDED=1\\
	-O2\\
	-Wall\\
	-g\\
	-pipe
CC=gcc
CFLAGS=\$(SHARED_FLAGS) -std=c11
CXX=g++
CXXFLAGS=\$(SHARED_FLAGS) -std=c++14
LDFLAGS=
LDLIBS=\\
	-lcrypto\\
	-lcurl\\
	-lncursesw\\
	-lpanelw\\
	-lpthread\\
	-lssl
EOF
}

# --------------------------------------------------
# 	 GNU/Linux (with Sun C compiler)
# --------------------------------------------------
os_LINUX_suncc () {
	cat <<EOF >>$MAKE_DEF_FILE
SHARED_FLAGS=\\
	-DLINUX=1\\
	-DUNIX=1\\
	-D_FORTIFY_SOURCE=2\\
	-D_POSIX_C_SOURCE=200809L\\
	-D_XOPEN_SOURCE=500\\
	-D_XOPEN_SOURCE_EXTENDED=1\\
	-I/usr/include/x86_64-linux-gnu\\
	-O2\\
	-pedantic\\
	-xannotate\\
	-xprevise\\
	-xsecure_code_analysis
CC=suncc
CFLAGS=\$(SHARED_FLAGS) -std=c11
CXX=sunCC
CXXFLAGS=\$(SHARED_FLAGS) -std=c++14
LDFLAGS=-xannotate -xprevise
LDLIBS=\\
	-lcrypto\\
	-lcurl\\
	-lncursesw\\
	-lpanelw\\
	-lpthread\\
	-lssl
EOF
}

fix_cflags () {
	helper_scripts="ncursesw6-config ncursesw5-config"

	for s in $helper_scripts; do
		if test -x "$(which "$s")"; then
			NCURSESW_CFLAGS="$($s --cflags)"

			if test -n "$NCURSESW_CFLAGS"; then
				echo "CFLAGS+=$NCURSESW_CFLAGS" >>$MAKE_DEF_FILE
				echo "CXXFLAGS+=$NCURSESW_CFLAGS" >>$MAKE_DEF_FILE
			fi

			break
		fi
	done
}

fix_cflags_with_pkg_config () {
	if test -x "$(which pkg-config)"; then
		NCURSESW_CFLAGS="$(pkg-config --cflags-only-I ncursesw)"

		if test -n "$NCURSESW_CFLAGS"; then
			echo "CFLAGS+=$NCURSESW_CFLAGS" >>$MAKE_DEF_FILE
			echo "CXXFLAGS+=$NCURSESW_CFLAGS" >>$MAKE_DEF_FILE
		fi
	fi
}

case "$(uname -s)" in
	"Darwin")
		os_MAC
	;;
	"FreeBSD" | "OpenBSD")
		os_BSD
	;;
	"NetBSD")
		os_NETBSD
	;;
	"Linux")
		if test "$1" = "suncc"; then
			os_LINUX_suncc
		else
			os_LINUX
		fi

#		fix_cflags
		fix_cflags_with_pkg_config
	;;
	*)
		echo "OS not supported!"
		exit 1
	;;
esac

append_compiler_flags () {
	echo "CFLAGS+=-DUNIT_TESTING=1" >>$MAKE_DEF_FILE
	echo "CXXFLAGS+=-DUNIT_TESTING=1" >>$MAKE_DEF_FILE
}

link_with_cmocka () {
	echo "LDLIBS+=-lcmocka" >>$MAKE_DEF_FILE
}

if test "$1" = "--unittesting"; then
	append_compiler_flags
	link_with_cmocka
fi

if test -f "$MAKE_DEF_FILE"; then
	echo "  - $MAKE_DEF_FILE successfully created!"
else
	echo "fatal error"
	exit 1
fi
